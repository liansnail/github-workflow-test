name: Detect Agent Changes

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-agents: ${{ steps.changes.outputs.changed-agents }}
      matrix: ${{ steps.changes.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed agents
        id: changes
        run: |
          # Get list of changed files
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.sha }})
          else
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }}..${{ github.sha }})
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Extract unique agent names from changed paths
          CHANGED_AGENTS=$(echo "$CHANGED_FILES" | grep "^apps/" | cut -d'/' -f2 | sort -u | tr '\n' ' ')

          echo "Changed agents: $CHANGED_AGENTS"

          # Create matrix for parallel deployment
          AGENTS_ARRAY="[]"
          if [ ! -z "$CHANGED_AGENTS" ]; then
            AGENTS_JSON=$(echo "$CHANGED_AGENTS" | tr ' ' '\n' | grep -v '^$' | jq -R . | jq -s .)
            AGENTS_ARRAY=$(echo '{"agent":' $AGENTS_JSON '}')
          fi

          echo "changed-agents=$CHANGED_AGENTS" >> $GITHUB_OUTPUT
          echo "matrix=$AGENTS_ARRAY" >> $GITHUB_OUTPUT

  dispatch-deployments:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-agents != ''
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}

    steps:
      - name: Dispatch deployment for ${{ matrix.agent }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{
              "event_type": "deploy-agent",
              "client_payload": {
                "agent": "${{ matrix.agent }}",
                "triggered_by": "detect-changes",
                "commit_sha": "${{ github.sha }}",
                "ref": "${{ github.ref }}"
              }
            }'

          echo "âœ… Dispatched deployment for ${{ matrix.agent }}"